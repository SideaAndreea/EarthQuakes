{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\Internship\\\\react-internship-22\\\\Exercices\\\\earthquakes\\\\src\\\\components\\\\pages\\\\home\\\\Home.js\";\nimport React, { useEffect, useState } from \"react\";\nimport MapComponent from \"../../MapComponent/MapComponent\";\nimport TestData from \"../../MapComponent/TestData.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  // const [timeFrame, setTimeFrame] = useState([\"hour\", \"day\", \"week\", \"month\"]);\n  // const [mag, setMag] = useState([]);\n  const timeFrame = [\"hour\", \"day\", \"week\", \"month\"]; // const [data, setData] = useState([]);\n  // const [value, setValue] = useState(\"Any\");\n  // const [isShown, setIsShown] = useState(false);\n  // function handleChangeMagnitude(event) {\n  //   setValue(event.target.value);\n  // }\n  // async function fetchData() {\n  //   setIsShown(false);\n  //   if (value === \"Any\") {\n  //     const response = await fetch(\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_hour.geojson\"\n  //     );\n  //     const result = await response.json();\n  //     setData(result.features);\n  //   } else if (value === \"4.5+\") {\n  //     const response = await fetch(\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/4.5_hour.geojson\"\n  //     );\n  //     const result = await response.json();\n  //     setData(result.features);\n  //   } else if (value === \"2.5+\") {\n  //     const response = await fetch(\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_hour.geojson\"\n  //     );\n  //     const result = await response.json();\n  //     setData(result.features);\n  //   } else if (value === \"1+\") {\n  //     const response = await fetch(\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/1.0_hour.geojson\"\n  //     );\n  //     const result = await response.json();\n  //     setData(result.features);\n  //   }\n  // }\n  // useEffect(() => {\n  //   fetchData();\n  // }, [value]);\n  // const fetchData2 = async () => {\n  //   setIsShown(false);\n  //   if (value === \"Any\") {\n  //     const response = await fetch(\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_day.geojson\"\n  //     );\n  //     const result = await response.json();\n  //     setData(result.features);\n  //   } else if (value === \"4.5+\") {\n  //     const response = await fetch(\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/4.5_day.geojson\"\n  //     );\n  //     const result = await response.json();\n  //     setData(result.features);\n  //   } else if (value === \"2.5+\") {\n  //     const response = await fetch(\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_day.geojson\"\n  //     );\n  //     const result = await response.json();\n  //     setData(result.features);\n  //   } else if (value === \"1+\") {\n  //     const response = await fetch(\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/1.0_day.geojson\"\n  //     );\n  //     const result = await response.json();\n  //     setData(result.features);\n  //   }\n  // };\n  // useEffect(() => {\n  //   fetchData2();\n  // }, [value]);\n  // const fetchData3 = async () => {\n  //   setIsShown(false);\n  //   if (value === \"Any\") {\n  //     const response = await fetch(\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_week.geojson\"\n  //     );\n  //     const result = await response.json();\n  //     setData(result.features);\n  //   } else if (value === \"4.5+\") {\n  //     const response = await fetch(\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/4.5_week.geojson\"\n  //     );\n  //     const result = await response.json();\n  //     setData(result.features);\n  //   } else if (value === \"2.5+\") {\n  //     const response = await fetch(\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_week.geojson\"\n  //     );\n  //     const result = await response.json();\n  //     setData(result.features);\n  //   } else if (value === \"1+\") {\n  //     const response = await fetch(\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/1.0_week.geojson\"\n  //     );\n  //     const result = await response.json();\n  //     setData(result.features);\n  //   }\n  // };\n  // useEffect(() => {\n  //   fetchData3();\n  // }, [value]);\n  // const fetchData4 = async () => {\n  //   setIsShown(false);\n  //   if (value === \"Any\") {\n  //     const response = await fetch(\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_month.geojson\"\n  //     );\n  //     const result = await response.json();\n  //     setData(result.features);\n  //   } else if (value === \"4.5+\") {\n  //     const response = await fetch(\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/4.5_month.geojson\"\n  //     );\n  //     const result = await response.json();\n  //     setData(result.features);\n  //   } else if (value === \"2.5+\") {\n  //     const response = await fetch(\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_month.geojson\"\n  //     );\n  //     const result = await response.json();\n  //     setData(result.features);\n  //   } else if (value === \"1+\") {\n  //     const response = await fetch(\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/1.0_month.geojson\"\n  //     );\n  //     const result = await response.json();\n  //     setData(result.features);\n  //   }\n  // };\n  // useEffect(() => {\n  //   fetchData4();\n  // }, [value]);\n  // const handleClick = (event) => {\n  //   setIsShown(true);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: timeFrame.map(time => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button button1\",\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapComponent, {\n      earthquakes: TestData,\n      height: 450,\n      width: 700\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","MapComponent","TestData","Home","timeFrame","map","time"],"sources":["C:/Users/user/OneDrive/Desktop/Internship/react-internship-22/Exercices/earthquakes/src/components/pages/home/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport MapComponent from \"../../MapComponent/MapComponent\";\r\nimport TestData from \"../../MapComponent/TestData.json\";\r\n\r\nconst Home = () => {\r\n  // const [timeFrame, setTimeFrame] = useState([\"hour\", \"day\", \"week\", \"month\"]);\r\n  // const [mag, setMag] = useState([]);\r\n\r\n  const timeFrame = [\"hour\", \"day\", \"week\", \"month\"];\r\n\r\n  // const [data, setData] = useState([]);\r\n  // const [value, setValue] = useState(\"Any\");\r\n  // const [isShown, setIsShown] = useState(false);\r\n\r\n  // function handleChangeMagnitude(event) {\r\n  //   setValue(event.target.value);\r\n  // }\r\n\r\n  // async function fetchData() {\r\n  //   setIsShown(false);\r\n\r\n  //   if (value === \"Any\") {\r\n  //     const response = await fetch(\r\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_hour.geojson\"\r\n  //     );\r\n  //     const result = await response.json();\r\n  //     setData(result.features);\r\n  //   } else if (value === \"4.5+\") {\r\n  //     const response = await fetch(\r\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/4.5_hour.geojson\"\r\n  //     );\r\n  //     const result = await response.json();\r\n  //     setData(result.features);\r\n  //   } else if (value === \"2.5+\") {\r\n  //     const response = await fetch(\r\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_hour.geojson\"\r\n  //     );\r\n  //     const result = await response.json();\r\n  //     setData(result.features);\r\n  //   } else if (value === \"1+\") {\r\n  //     const response = await fetch(\r\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/1.0_hour.geojson\"\r\n  //     );\r\n  //     const result = await response.json();\r\n  //     setData(result.features);\r\n  //   }\r\n  // }\r\n  // useEffect(() => {\r\n  //   fetchData();\r\n  // }, [value]);\r\n\r\n  // const fetchData2 = async () => {\r\n  //   setIsShown(false);\r\n\r\n  //   if (value === \"Any\") {\r\n  //     const response = await fetch(\r\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_day.geojson\"\r\n  //     );\r\n  //     const result = await response.json();\r\n  //     setData(result.features);\r\n  //   } else if (value === \"4.5+\") {\r\n  //     const response = await fetch(\r\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/4.5_day.geojson\"\r\n  //     );\r\n  //     const result = await response.json();\r\n  //     setData(result.features);\r\n  //   } else if (value === \"2.5+\") {\r\n  //     const response = await fetch(\r\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_day.geojson\"\r\n  //     );\r\n  //     const result = await response.json();\r\n  //     setData(result.features);\r\n  //   } else if (value === \"1+\") {\r\n  //     const response = await fetch(\r\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/1.0_day.geojson\"\r\n  //     );\r\n  //     const result = await response.json();\r\n  //     setData(result.features);\r\n  //   }\r\n  // };\r\n  // useEffect(() => {\r\n  //   fetchData2();\r\n  // }, [value]);\r\n\r\n  // const fetchData3 = async () => {\r\n  //   setIsShown(false);\r\n\r\n  //   if (value === \"Any\") {\r\n  //     const response = await fetch(\r\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_week.geojson\"\r\n  //     );\r\n  //     const result = await response.json();\r\n  //     setData(result.features);\r\n  //   } else if (value === \"4.5+\") {\r\n  //     const response = await fetch(\r\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/4.5_week.geojson\"\r\n  //     );\r\n  //     const result = await response.json();\r\n  //     setData(result.features);\r\n  //   } else if (value === \"2.5+\") {\r\n  //     const response = await fetch(\r\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_week.geojson\"\r\n  //     );\r\n  //     const result = await response.json();\r\n  //     setData(result.features);\r\n  //   } else if (value === \"1+\") {\r\n  //     const response = await fetch(\r\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/1.0_week.geojson\"\r\n  //     );\r\n  //     const result = await response.json();\r\n  //     setData(result.features);\r\n  //   }\r\n  // };\r\n  // useEffect(() => {\r\n  //   fetchData3();\r\n  // }, [value]);\r\n\r\n  // const fetchData4 = async () => {\r\n  //   setIsShown(false);\r\n\r\n  //   if (value === \"Any\") {\r\n  //     const response = await fetch(\r\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_month.geojson\"\r\n  //     );\r\n  //     const result = await response.json();\r\n  //     setData(result.features);\r\n  //   } else if (value === \"4.5+\") {\r\n  //     const response = await fetch(\r\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/4.5_month.geojson\"\r\n  //     );\r\n  //     const result = await response.json();\r\n  //     setData(result.features);\r\n  //   } else if (value === \"2.5+\") {\r\n  //     const response = await fetch(\r\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_month.geojson\"\r\n  //     );\r\n  //     const result = await response.json();\r\n  //     setData(result.features);\r\n  //   } else if (value === \"1+\") {\r\n  //     const response = await fetch(\r\n  //       \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/1.0_month.geojson\"\r\n  //     );\r\n  //     const result = await response.json();\r\n  //     setData(result.features);\r\n  //   }\r\n  // };\r\n  // useEffect(() => {\r\n  //   fetchData4();\r\n  // }, [value]);\r\n\r\n  // const handleClick = (event) => {\r\n  //   setIsShown(true);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      {/* <div>\r\n        <button\r\n          className=\"button button1\"\r\n          onClick={() => {\r\n            fetchData();\r\n            handleClick();\r\n          }}\r\n        >\r\n          Past Hour\r\n        </button>\r\n        <button\r\n          className=\"button button2\"\r\n          onClick={() => {\r\n            fetchData2();\r\n            handleClick();\r\n          }}\r\n        >\r\n          Past Day\r\n        </button>\r\n        <button\r\n          className=\"button button3\"\r\n          onClick={() => {\r\n            fetchData3();\r\n            handleClick();\r\n          }}\r\n        >\r\n          Past 7 Days\r\n        </button>\r\n        <button\r\n          className=\"button button4\"\r\n          onClick={() => {\r\n            fetchData4();\r\n            handleClick();\r\n          }}\r\n        >\r\n          Past 30 Days\r\n        </button>\r\n      </div> */}\r\n\r\n      <div>\r\n        {timeFrame.map((time) => (\r\n          <div className=\"button button1\">{time}</div>\r\n        ))}\r\n      </div>\r\n\r\n      <MapComponent earthquakes={TestData} height={450} width={700} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EACjB;EACA;EAEA,MAAMC,SAAS,GAAG,CAAC,MAAD,EAAS,KAAT,EAAgB,MAAhB,EAAwB,OAAxB,CAAlB,CAJiB,CAMjoBACE;IAAA,wBAwCE;MAAA,UACGA,SAAS,CAACC,GAAV,CAAeC,IAAD,iBACb;QAAK,SAAS,EAAC,gBAAf;QAAA,UAAiCA;MAAjC;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QAxCF,eA8CE,QAAC,YAAD;MAAc,WAAW,EAAEJ,QAA3B;MAAqC,MAAM,EAAE,GAA7C;MAAkD,KAAK,EAAE;IAAzD;MAAA;MAAA;MAAA;IAAA,QA9CF;EAAA,gBADF;AAkDD,CAxMD;;KAAMC,I;AA0MN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}