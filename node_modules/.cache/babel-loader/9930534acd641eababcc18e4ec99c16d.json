{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nexport default class ShaderAttribute {\n  constructor(dataColumn, opts) {\n    _defineProperty(this, \"opts\", void 0);\n\n    _defineProperty(this, \"source\", void 0);\n\n    this.opts = opts;\n    this.source = dataColumn;\n  }\n\n  get value() {\n    return this.source.value;\n  }\n\n  getValue() {\n    const buffer = this.source.getBuffer();\n    const accessor = this.getAccessor();\n\n    if (buffer) {\n      return [buffer, accessor];\n    }\n\n    const {\n      value\n    } = this.source;\n    const {\n      size\n    } = accessor;\n    let constantValue = value;\n\n    if (value && value.length !== size) {\n      constantValue = new Float32Array(size);\n      const index = accessor.elementOffset || 0;\n\n      for (let i = 0; i < size; ++i) {\n        constantValue[i] = value[index + i];\n      }\n    }\n\n    return constantValue;\n  }\n\n  getAccessor() {\n    return { ...this.source.getAccessor(),\n      ...this.opts\n    };\n  }\n\n}","map":{"version":3,"mappings":";AAYA,eAAe,MAAMA,eAAN,CAAkD;EAI/DC,WAAW,CAACC,UAAD,EAAmCC,IAAnC,EAAiE;IAAAC;;IAAAA;;IAE1E,KAAKD,IAAL,GAAYA,IAAZ;IACA,KAAKE,MAAL,GAAcH,UAAd;EACD;;EAEQ,IAALI,KAAK,GAAwB;IAC/B,OAAO,KAAKD,MAAL,CAAYC,KAAnB;EACD;;EAEDC,QAAQ,GAAmD;IACzD,MAAMC,MAAM,GAAG,KAAKH,MAAL,CAAYI,SAAZ,EAAf;IACA,MAAMC,QAAQ,GAAG,KAAKC,WAAL,EAAjB;;IACA,IAAIH,MAAJ,EAAY;MACV,OAAO,CAACA,MAAD,EAASE,QAAT,CAAP;IACD;;IAED,MAAM;MAACJ;IAAD,IAAU,KAAKD,MAArB;IACA,MAAM;MAACO;IAAD,IAASF,QAAf;IACA,IAAIG,aAAa,GAAGP,KAApB;;IAEA,IAAIA,KAAK,IAAIA,KAAK,CAACQ,MAANR,KAAiBM,IAA9B,EAAoC;MAClCC,aAAa,GAAG,IAAIE,YAAJ,CAAiBH,IAAjB,CAAhBC;MAEA,MAAMG,KAAK,GAAGN,QAAQ,CAACO,aAATP,IAA0B,CAAxC;;MACA,KAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,IAApB,EAA0B,EAAEM,CAA5B,EAA+B;QAC7BL,aAAa,CAACK,CAAD,CAAbL,GAAmBP,KAAK,CAACU,KAAK,GAAGE,CAAT,CAAxBL;MACD;IACF;;IAED,OAAOA,aAAP;EACD;;EAEDF,WAAW,GAAG;IACZ,OAAO,EAEL,GAAG,KAAKN,MAAL,CAAYM,WAAZ,EAFE;MAIL,GAAG,KAAKR;IAJH,CAAP;EAMD;;AA5C8D","names":["ShaderAttribute","constructor","dataColumn","opts","_defineProperty","source","value","getValue","buffer","getBuffer","accessor","getAccessor","size","constantValue","length","Float32Array","index","elementOffset","i"],"sources":["C:\\Users\\user\\OneDrive\\Desktop\\Internship\\react-internship-22\\Exercices\\earthquakes\\node_modules\\@deck.gl\\core\\src\\lib\\attribute\\shader-attribute.ts"],"sourcesContent":["/* eslint-disable complexity */\nimport type DataColumn from './data-column';\nimport type {BufferAccessor, ShaderAttributeOptions} from './data-column';\nimport type {Buffer} from '@luma.gl/webgl';\nimport type {NumericArray} from '../../types/types';\n\nexport interface IShaderAttribute {\n  value: NumericArray | null;\n  getValue(): [Buffer, BufferAccessor] | NumericArray | null;\n}\n\n/* This class creates a luma.gl-compatible \"view\" on top of a DataColumn instance */\nexport default class ShaderAttribute implements IShaderAttribute {\n  opts: ShaderAttributeOptions;\n  source: DataColumn<any, any>;\n\n  constructor(dataColumn: DataColumn<any, any>, opts: ShaderAttributeOptions) {\n    // Options that cannot be changed later\n    this.opts = opts;\n    this.source = dataColumn;\n  }\n\n  get value(): NumericArray | null {\n    return this.source.value;\n  }\n\n  getValue(): [Buffer, BufferAccessor] | NumericArray | null {\n    const buffer = this.source.getBuffer();\n    const accessor = this.getAccessor();\n    if (buffer) {\n      return [buffer, accessor];\n    }\n\n    const {value} = this.source;\n    const {size} = accessor;\n    let constantValue = value;\n\n    if (value && value.length !== size) {\n      constantValue = new Float32Array(size);\n      // initiate offset values\n      const index = accessor.elementOffset || 0; // element offset\n      for (let i = 0; i < size; ++i) {\n        constantValue[i] = value[index + i];\n      }\n    }\n\n    return constantValue;\n  }\n\n  getAccessor() {\n    return {\n      // source data accessor\n      ...this.source.getAccessor(),\n      // shader attribute overrides\n      ...this.opts\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}