{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\deeag\\\\OneDrive\\\\Desktop\\\\Aplica\\u021Bii\\\\earthquakes\\\\src\\\\components\\\\MapComponent\\\\MapComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect, useState } from \"react\";\nimport Map, { Source, Layer, Popup, NavigationControl, FullscreenControl, ScaleControl } from \"react-map-gl\";\nimport { getMapBounds } from \"./utils\";\nimport { clusterCountLayer, unclusteredPointLayer, clusterLayer } from \"./Layers\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"./MapComponent.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MapComponent = _ref => {\n  _s();\n\n  let {\n    earthquakes,\n    width,\n    height = 400\n  } = _ref;\n  const mapRef = useRef();\n  const [viewport, setViewport] = useState({});\n  const [selectedEarthquake, setSelectedEarthquake] = useState(null);\n  const [loading, setLoading] = useState(true);\n  let geojson = null;\n\n  if (earthquakes) {\n    if (earthquakes.features) {\n      geojson = {\n        type: \"FeatureCollection\",\n        features: earthquakes.features\n      };\n    } else if (earthquakes.type && earthquakes.type === \"Feature\") {\n      geojson = {\n        type: \"FeatureCollection\",\n        features: [earthquakes]\n      };\n    }\n  }\n\n  useEffect(() => {\n    const points = [];\n    let bounds = null;\n\n    if (earthquakes) {\n      if (earthquakes.features) {\n        earthquakes.features.forEach(feature => {\n          points.push({\n            longitude: feature.geometry.coordinates[0],\n            latitude: feature.geometry.coordinates[1]\n          });\n        });\n        bounds = getMapBounds(points, {\n          capZoom: 7\n        });\n      } else if (earthquakes.type && earthquakes.type === \"Feature\") {\n        points.push({\n          longitude: earthquakes.geometry.coordinates[0],\n          latitude: earthquakes.geometry.coordinates[1]\n        });\n        bounds = getMapBounds(points, {\n          capZoom: 1\n        });\n      }\n\n      setViewport(bounds);\n      setLoading(false);\n    }\n  }, [earthquakes, mapRef]);\n\n  const onClick = event => {\n    const feature = event.features[0];\n\n    if (!feature) {\n      setSelectedEarthquake(null);\n      return;\n    }\n\n    const clusterId = feature.properties.cluster_id;\n    const mapboxSource = mapRef.current.getSource(\"earthquakes\");\n\n    if (clusterId) {\n      mapboxSource.getClusterExpansionZoom(clusterId, (err, zoom) => {\n        if (err) return;\n        mapRef.current.easeTo({\n          center: feature.geometry.coordinates,\n          zoom,\n          duration: 500\n        });\n      });\n    }\n\n    if (feature.properties && feature.properties.type === \"earthquake\") {\n      setSelectedEarthquake({ ...feature.properties,\n        lng: feature.geometry.coordinates[0],\n        lat: feature.geometry.coordinates[1]\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Map, {\n      ref: mapRef,\n      style: {\n        height,\n        width\n      },\n      ...viewport,\n      onMove: evt => setViewport(evt.viewState),\n      dragPan: true,\n      mapStyle: \"mapbox://styles/mapbox/dark-v10\",\n      interactiveLayerIds: [clusterLayer.id, unclusteredPointLayer.id],\n      mapboxAccessToken: process.env.REACT_APP_MAPBOX_API_KEY,\n      onViewportChange: setViewport,\n      onClick: onClick,\n      children: [/*#__PURE__*/_jsxDEV(FullscreenControl, {\n        position: \"top-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(NavigationControl, {\n        position: \"top-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ScaleControl, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this), geojson && /*#__PURE__*/_jsxDEV(Source, {\n        id: \"earthquakes\",\n        type: \"geojson\",\n        data: geojson,\n        cluster: true,\n        clusterMaxZoom: 14,\n        clusterRadius: 50,\n        children: [/*#__PURE__*/_jsxDEV(Layer, { ...clusterLayer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Layer, { ...clusterCountLayer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Layer, { ...unclusteredPointLayer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 6\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 6\n      }, this), selectedEarthquake && geojson && /*#__PURE__*/_jsxDEV(Popup, {\n        anchor: \"bottom\",\n        longitude: Number(selectedEarthquake.lng),\n        latitude: Number(selectedEarthquake.lat),\n        onClose: () => setSelectedEarthquake(null),\n        maxWidth: 500,\n        className: \"earthquake-popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label-value\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"label\",\n              children: \"Title:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"value\",\n              children: [\" \", selectedEarthquake.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label-value\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"label\",\n              children: \"Occurred at:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"value\",\n              children: new Date(selectedEarthquake.time).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label-value\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"label\",\n              children: \"Magnitude:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"value\",\n              children: selectedEarthquake.mag\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MapComponent, \"n06vDu6ltr6xIuCQU5lLKwzrvcc=\");\n\n_c = MapComponent;\nexport default MapComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["useRef","useEffect","useState","Map","Source","Layer","Popup","NavigationControl","FullscreenControl","ScaleControl","getMapBounds","clusterCountLayer","unclusteredPointLayer","clusterLayer","MapComponent","earthquakes","width","height","mapRef","viewport","setViewport","selectedEarthquake","setSelectedEarthquake","loading","setLoading","geojson","features","type","points","bounds","forEach","feature","push","longitude","geometry","coordinates","latitude","capZoom","onClick","event","clusterId","properties","cluster_id","mapboxSource","current","getSource","getClusterExpansionZoom","err","zoom","easeTo","center","duration","lng","lat","evt","viewState","id","process","env","REACT_APP_MAPBOX_API_KEY","Number","title","Date","time","toLocaleString","mag"],"sources":["C:/Users/deeag/OneDrive/Desktop/Aplica»õii/earthquakes/src/components/MapComponent/MapComponent.jsx"],"sourcesContent":["import { useRef, useEffect, useState } from \"react\";\r\nimport Map, {\r\n\tSource,\r\n\tLayer,\r\n\tPopup,\r\n\tNavigationControl,\r\n\tFullscreenControl,\r\n\tScaleControl,\r\n} from \"react-map-gl\";\r\nimport { getMapBounds } from \"./utils\";\r\nimport {\r\n\tclusterCountLayer,\r\n\tunclusteredPointLayer,\r\n\tclusterLayer,\r\n} from \"./Layers\";\r\n\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport \"./MapComponent.css\";\r\n\r\nconst MapComponent = ({ earthquakes, width, height = 400 }) => {\r\n\tconst mapRef = useRef();\r\n\tconst [viewport, setViewport] = useState({});\r\n\tconst [selectedEarthquake, setSelectedEarthquake] = useState(null);\r\n\tconst [loading, setLoading] = useState(true);\r\n\tlet geojson = null;\r\n\r\n\tif (earthquakes) {\r\n\t\tif (earthquakes.features) {\r\n\t\t\tgeojson = {\r\n\t\t\t\ttype: \"FeatureCollection\",\r\n\t\t\t\tfeatures: earthquakes.features,\r\n\t\t\t};\r\n\t\t} else if (earthquakes.type && earthquakes.type === \"Feature\") {\r\n\t\t\tgeojson = {\r\n\t\t\t\ttype: \"FeatureCollection\",\r\n\t\t\t\tfeatures: [earthquakes],\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst points = [];\r\n\t\tlet bounds = null;\r\n\t\tif (earthquakes) {\r\n\t\t\tif (earthquakes.features) {\r\n\t\t\t\tearthquakes.features.forEach((feature) => {\r\n\t\t\t\t\tpoints.push({\r\n\t\t\t\t\t\tlongitude: feature.geometry.coordinates[0],\r\n\t\t\t\t\t\tlatitude: feature.geometry.coordinates[1],\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\tbounds = getMapBounds(points, { capZoom: 7 });\r\n\t\t\t} else if (earthquakes.type && earthquakes.type === \"Feature\") {\r\n\t\t\t\tpoints.push({\r\n\t\t\t\t\tlongitude: earthquakes.geometry.coordinates[0],\r\n\t\t\t\t\tlatitude: earthquakes.geometry.coordinates[1],\r\n\t\t\t\t});\r\n\t\t\t\tbounds = getMapBounds(points, { capZoom: 1 });\r\n\t\t\t}\r\n\t\t\tsetViewport(bounds);\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t}, [earthquakes, mapRef]);\r\n\r\n\tconst onClick = (event) => {\r\n\t\tconst feature = event.features[0];\r\n\r\n\t\tif (!feature) {\r\n\t\t\tsetSelectedEarthquake(null);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst clusterId = feature.properties.cluster_id;\r\n\t\tconst mapboxSource = mapRef.current.getSource(\"earthquakes\");\r\n\r\n\t\tif (clusterId) {\r\n\t\t\tmapboxSource.getClusterExpansionZoom(clusterId, (err, zoom) => {\r\n\t\t\t\tif (err) return;\r\n\t\t\t\tmapRef.current.easeTo({\r\n\t\t\t\t\tcenter: feature.geometry.coordinates,\r\n\t\t\t\t\tzoom,\r\n\t\t\t\t\tduration: 500,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (feature.properties && feature.properties.type === \"earthquake\") {\r\n\t\t\tsetSelectedEarthquake({\r\n\t\t\t\t...feature.properties,\r\n\t\t\t\tlng: feature.geometry.coordinates[0],\r\n\t\t\t\tlat: feature.geometry.coordinates[1],\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Map\r\n\t\t\t\tref={mapRef}\r\n\t\t\t\tstyle={{ height, width }}\r\n\t\t\t\t{...viewport}\r\n\t\t\t\tonMove={(evt) => setViewport(evt.viewState)}\r\n\t\t\t\tdragPan\r\n\t\t\t\tmapStyle=\"mapbox://styles/mapbox/dark-v10\"\r\n\t\t\t\tinteractiveLayerIds={[clusterLayer.id, unclusteredPointLayer.id]}\r\n\t\t\t\tmapboxAccessToken={process.env.REACT_APP_MAPBOX_API_KEY}\r\n\t\t\t\tonViewportChange={setViewport}\r\n\t\t\t\tonClick={onClick}\r\n\t\t\t>\r\n\t\t\t\t<FullscreenControl position=\"top-right\" />\r\n\t\t\t\t<NavigationControl position=\"top-right\" />\r\n\t\t\t\t<ScaleControl />\r\n\r\n\t\t\t\t{geojson && (\r\n\t\t\t\t\t<Source\r\n\t\t\t\t\t\tid=\"earthquakes\"\r\n\t\t\t\t\t\ttype=\"geojson\"\r\n\t\t\t\t\t\tdata={geojson}\r\n\t\t\t\t\t\tcluster={true}\r\n\t\t\t\t\t\tclusterMaxZoom={14}\r\n\t\t\t\t\t\tclusterRadius={50}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Layer {...clusterLayer} />\r\n\t\t\t\t\t\t<Layer {...clusterCountLayer} />\r\n\t\t\t\t\t\t<Layer {...unclusteredPointLayer} />\r\n\t\t\t\t\t</Source>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{loading && (\r\n\t\t\t\t\t<div className=\"loading-indicator\">\r\n\t\t\t\t\t\t<p>Loading...</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{selectedEarthquake && geojson && (\r\n\t\t\t\t\t<Popup\r\n\t\t\t\t\t\tanchor=\"bottom\"\r\n\t\t\t\t\t\tlongitude={Number(selectedEarthquake.lng)}\r\n\t\t\t\t\t\tlatitude={Number(selectedEarthquake.lat)}\r\n\t\t\t\t\t\tonClose={() => setSelectedEarthquake(null)}\r\n\t\t\t\t\t\tmaxWidth={500}\r\n\t\t\t\t\t\tclassName=\"earthquake-popup\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div className=\"label-value\">\r\n\t\t\t\t\t\t\t\t<div className=\"label\">Title:</div>\r\n\t\t\t\t\t\t\t\t<div className=\"value\"> {selectedEarthquake.title}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"label-value\">\r\n\t\t\t\t\t\t\t\t<div className=\"label\">Occurred at:</div>\r\n\t\t\t\t\t\t\t\t<div className=\"value\">\r\n\t\t\t\t\t\t\t\t\t{new Date(selectedEarthquake.time).toLocaleString()}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"label-value\">\r\n\t\t\t\t\t\t\t\t<div className=\"label\">Magnitude:</div>\r\n\t\t\t\t\t\t\t\t<div className=\"value\">{selectedEarthquake.mag}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Popup>\r\n\t\t\t\t)}\r\n\t\t\t</Map>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MapComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}