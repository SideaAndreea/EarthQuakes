{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\Internship\\\\react-internship-22\\\\Exercices\\\\earthquakes\\\\src\\\\components\\\\pages\\\\contact\\\\Contact.js\";\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contact = () => {\n  var _s = $RefreshSig$();\n\n  const validate = values => {\n    const errors = {};\n\n    if (!values.name) {\n      errors.name = \"Required\";\n    } else if (values.name.length > 15) {\n      errors.name = \"Must be 15 characters or less\";\n    }\n\n    if (!values.email) {\n      errors.email = \"Required\";\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      errors.email = \"Invalid email address\";\n    }\n\n    return errors;\n  };\n\n  const SignupForm = () => {\n    _s();\n\n    const formik = useFormik({\n      initialValues: {\n        name: \"\",\n        email: \"\"\n      },\n      validate,\n      onSubmit: values => {\n        alert(JSON.stringify(values, null, 2));\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name\",\n        name: \"name\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), formik.touched.name && formik.errors.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        name: \"email\",\n        type: \"email\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(SignupForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n    return [useFormik];\n  });\n};\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useFormik","Contact","validate","values","errors","name","length","email","test","SignupForm","formik","initialValues","onSubmit","alert","JSON","stringify","handleSubmit","handleChange","handleBlur","touched"],"sources":["C:/Users/user/OneDrive/Desktop/Internship/react-internship-22/Exercices/earthquakes/src/components/pages/contact/Contact.js"],"sourcesContent":["import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nconst Contact = () => {\r\n  const validate = (values) => {\r\n    const errors = {};\r\n\r\n    if (!values.name) {\r\n      errors.name = \"Required\";\r\n    } else if (values.name.length > 15) {\r\n      errors.name = \"Must be 15 characters or less\";\r\n    }\r\n\r\n    if (!values.email) {\r\n      errors.email = \"Required\";\r\n    } else if (\r\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n    ) {\r\n      errors.email = \"Invalid email address\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const SignupForm = () => {\r\n    const formik = useFormik({\r\n      initialValues: {\r\n        name: \"\",\r\n        email: \"\",\r\n      },\r\n      validate,\r\n      onSubmit: (values) => {\r\n        alert(JSON.stringify(values, null, 2));\r\n      },\r\n    });\r\n    return (\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          id=\"name\"\r\n          name=\"name\"\r\n          type=\"text\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.name}\r\n        />\r\n        {formik.touched.name && formik.errors.name ? (\r\n          <div>{formik.errors.name}</div>\r\n        ) : null}\r\n\r\n        <label htmlFor=\"email\">Email Address</label>\r\n        <input\r\n          id=\"email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.email}\r\n        />\r\n        {formik.touched.email && formik.errors.email ? (\r\n          <div>{formik.errors.email}</div>\r\n        ) : null}\r\n\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    );\r\n  };\r\n};\r\nexport default Contact;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,QAA1B;;;AACA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACpB,MAAMC,QAAQ,GAAIC,MAAD,IAAY;IAC3B,MAAMC,MAAM,GAAG,EAAf;;IAEA,IAAI,CAACD,MAAM,CAACE,IAAZ,EAAkB;MAChBD,MAAM,CAACC,IAAP,GAAc,UAAd;IACD,CAFD,MAEO,IAAIF,MAAM,CAACE,IAAP,CAAYC,MAAZ,GAAqB,EAAzB,EAA6B;MAClCF,MAAM,CAACC,IAAP,GAAc,+BAAd;IACD;;IAED,IAAI,CAACF,MAAM,CAACI,KAAZ,EAAmB;MACjBH,MAAM,CAACG,KAAP,GAAe,UAAf;IACD,CAFD,MAEO,IACL,CAAC,4CAA4CC,IAA5C,CAAiDL,MAAM,CAACI,KAAxD,CADI,EAEL;MACAH,MAAM,CAACG,KAAP,GAAe,uBAAf;IACD;;IAED,OAAOH,MAAP;EACD,CAlBD;;EAoBA,MAAMK,UAAU,GAAG,MAAM;IAAA;;IACvB,MAAMC,MAAM,GAAGV,SAAS,CAAC;MACvBW,aAAa,EAAE;QACbN,IAAI,EAAE,EADO;QAEbE,KAAK,EAAE;MAFM,CADQ;MAKvBL,QALuB;MAMvBU,QAAQ,EAAGT,MAAD,IAAY;QACpBU,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeZ,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;MACD;IARsB,CAAD,CAAxB;IAUA,oBACE;MAAM,QAAQ,EAAEO,MAAM,CAACM,YAAvB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,EAAE,EAAC,MADL;QAEE,IAAI,EAAC,MAFP;QAGE,IAAI,EAAC,MAHP;QAIE,QAAQ,EAAEN,MAAM,CAACO,YAJnB;QAKE,MAAM,EAAEP,MAAM,CAACQ,UALjB;QAME,KAAK,EAAER,MAAM,CAACP,MAAP,CAAcE;MANvB;QAAA;QAAA;QAAA;MAAA,QAFF,EAUGK,MAAM,CAACS,OAAP,CAAed,IAAf,IAAuBK,MAAM,CAACN,MAAP,CAAcC,IAArC,gBACC;QAAA,UAAMK,MAAM,CAACN,MAAP,CAAcC;MAApB;QAAA;QAAA;QAAA;MAAA,QADD,GAEG,IAZN,eAcE;QAAO,OAAO,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAdF,eAeE;QACE,EAAE,EAAC,OADL;QAEE,IAAI,EAAC,OAFP;QAGE,IAAI,EAAC,OAHP;QAIE,QAAQ,EAAEK,MAAM,CAACO,YAJnB;QAKE,MAAM,EAAEP,MAAM,CAACQ,UALjB;QAME,KAAK,EAAER,MAAM,CAACP,MAAP,CAAcI;MANvB;QAAA;QAAA;QAAA;MAAA,QAfF,EAuBGG,MAAM,CAACS,OAAP,CAAeZ,KAAf,IAAwBG,MAAM,CAACN,MAAP,CAAcG,KAAtC,gBACC;QAAA,UAAMG,MAAM,CAACN,MAAP,CAAcG;MAApB;QAAA;QAAA;QAAA;MAAA,QADD,GAEG,IAzBN,eA2BE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QA3BF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EA+BD,CA1CD;;EArBoB,GAqBdE,UArBc;IAAA,QAsBHT,SAtBG;EAAA;AAgErB,CAhED;;KAAMC,O;AAiEN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}