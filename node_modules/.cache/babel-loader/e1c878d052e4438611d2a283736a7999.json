{"ast":null,"code":"/*import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nconst Contact = () => {\r\n  const validate = (values) => {\r\n    const errors = {};\r\n\r\n    if (!values.name) {\r\n      errors.name = \"Required\";\r\n    } else if (values.name.length > 15) {\r\n      errors.name = \"Must be 15 characters or less\";\r\n    }\r\n\r\n    if (!values.email) {\r\n      errors.email = \"Required\";\r\n    } else if (\r\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n    ) {\r\n      errors.email = \"Invalid email address\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const SignupForm = () => {\r\n    const formik = useFormik({\r\n      initialValues: {\r\n        name: \"\",\r\n        email: \"\",\r\n      },\r\n      validate,\r\n      onSubmit: (values) => {\r\n        alert(JSON.stringify(values, null, 2));\r\n      },\r\n    });\r\n    return (\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          id=\"name\"\r\n          name=\"name\"\r\n          type=\"text\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.name}\r\n        />\r\n        {formik.touched.name && formik.errors.name ? (\r\n          <div>{formik.errors.name}</div>\r\n        ) : null}\r\n\r\n        <label htmlFor=\"email\">Email Address</label>\r\n        <input\r\n          id=\"email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.email}\r\n        />\r\n        {formik.touched.email && formik.errors.email ? (\r\n          <div>{formik.errors.email}</div>\r\n        ) : null}\r\n\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    );\r\n  };\r\n};\r\nexport default Contact;*/","map":{"version":3,"names":[],"sources":["C:/Users/user/OneDrive/Desktop/Internship/react-internship-22/Exercices/earthquakes/src/components/pages/contact/Contact.js"],"sourcesContent":["/*import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nconst Contact = () => {\r\n  const validate = (values) => {\r\n    const errors = {};\r\n\r\n    if (!values.name) {\r\n      errors.name = \"Required\";\r\n    } else if (values.name.length > 15) {\r\n      errors.name = \"Must be 15 characters or less\";\r\n    }\r\n\r\n    if (!values.email) {\r\n      errors.email = \"Required\";\r\n    } else if (\r\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n    ) {\r\n      errors.email = \"Invalid email address\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const SignupForm = () => {\r\n    const formik = useFormik({\r\n      initialValues: {\r\n        name: \"\",\r\n        email: \"\",\r\n      },\r\n      validate,\r\n      onSubmit: (values) => {\r\n        alert(JSON.stringify(values, null, 2));\r\n      },\r\n    });\r\n    return (\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          id=\"name\"\r\n          name=\"name\"\r\n          type=\"text\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.name}\r\n        />\r\n        {formik.touched.name && formik.errors.name ? (\r\n          <div>{formik.errors.name}</div>\r\n        ) : null}\r\n\r\n        <label htmlFor=\"email\">Email Address</label>\r\n        <input\r\n          id=\"email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.email}\r\n        />\r\n        {formik.touched.email && formik.errors.email ? (\r\n          <div>{formik.errors.email}</div>\r\n        ) : null}\r\n\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    );\r\n  };\r\n};\r\nexport default Contact;*/\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}