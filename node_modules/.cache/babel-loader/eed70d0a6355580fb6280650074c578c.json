{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\Internship\\\\react-internship-22\\\\Exercices\\\\earthquakes\\\\src\\\\components\\\\pages\\\\home\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport MapComponent from \"../../MapComponent/MapComponent\";\nimport TestData from \"../../MapComponent/TestData.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseURL = \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_hour.geojson\";\n\nconst Home = () => {\n  _s();\n\n  const [post, setPost] = useState(null);\n  const [value, setValue] = useState(\"all\");\n  const [timeFrame, setTimeFrame] = useState(\"hour\");\n\n  function handleChangeMagnitude(event) {\n    setValue(event.target.value);\n  }\n\n  React.useEffect(() => {\n    axios.get(baseURL).then(response => {\n      setPost(response.data);\n    });\n  }, [value, timeFrame]);\n  if (!post) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button1\",\n        onClick: () => setTimeFrame(\"hour\"),\n        children: \"Hour\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button2\",\n        onClick: () => setTimeFrame(\"day\"),\n        children: \"Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button3\",\n        onClick: () => setTimeFrame(\"week\"),\n        children: \"Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button4\",\n        onClick: () => setTimeFrame(\"month\"),\n        children: \"Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapComponent, {\n      earthquakes: TestData,\n      height: 450,\n      width: 700\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"67Wmq+aIj4sdduR4MM6XvJGZuzM=\");\n\n_c = Home;\nexport default Home;\n{\n  /*const [data, setData] = useState([]);\r\n  const [value, setValue] = useState(\"Any\");\r\n  const [isShown, setIsShown] = useState(false);\r\n    function handleChangeMagnitude(event) {\r\n    setValue(event.target.value);\r\n  }\r\n    async function fetchData() {\r\n    setIsShown(false);\r\n      if (value === \"Any\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_hour.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    } else if (value === \"4.5+\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/4.5_hour.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    } else if (value === \"2.5+\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_hour.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    } else if (value === \"1+\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/1.0_hour.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [value]);\r\n    const fetchData2 = async () => {\r\n    setIsShown(false);\r\n      if (value === \"Any\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_day.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    } else if (value === \"4.5+\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/4.5_day.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    } else if (value === \"2.5+\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_day.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    } else if (value === \"1+\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/1.0_day.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchData2();\r\n  }, [value]);\r\n    const fetchData3 = async () => {\r\n    setIsShown(false);\r\n      if (value === \"Any\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_week.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    } else if (value === \"4.5+\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/4.5_week.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    } else if (value === \"2.5+\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_week.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    } else if (value === \"1+\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/1.0_week.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchData3();\r\n  }, [value]);\r\n    const fetchData4 = async () => {\r\n    setIsShown(false);\r\n      if (value === \"Any\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_month.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    } else if (value === \"4.5+\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/4.5_month.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    } else if (value === \"2.5+\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_month.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    } else if (value === \"1+\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/1.0_month.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchData4();\r\n  }, [value]);\r\n    const handleClick = (event) => {\r\n    setIsShown(true);\r\n  };\r\n  <div>\r\n        <button\r\n          className=\"button button1\"\r\n          onClick={() => {\r\n            fetchData();\r\n            handleClick();\r\n          }}\r\n        >\r\n          Past Hour\r\n        </button>\r\n        <button\r\n          className=\"button button2\"\r\n          onClick={() => {\r\n            fetchData2();\r\n            handleClick();\r\n          }}\r\n        >\r\n          Past Day\r\n        </button>\r\n        <button\r\n          className=\"button button3\"\r\n          onClick={() => {\r\n            fetchData3();\r\n            handleClick();\r\n          }}\r\n        >\r\n          Past 7 Days\r\n        </button>\r\n        <button\r\n          className=\"button button4\"\r\n          onClick={() => {\r\n            fetchData4();\r\n            handleClick();\r\n          }}\r\n        >\r\n          Past 30 Days\r\n        </button>\r\n        </div>*/\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","axios","MapComponent","TestData","baseURL","Home","post","setPost","value","setValue","timeFrame","setTimeFrame","handleChangeMagnitude","event","target","get","then","response","data"],"sources":["C:/Users/user/OneDrive/Desktop/Internship/react-internship-22/Exercices/earthquakes/src/components/pages/home/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport MapComponent from \"../../MapComponent/MapComponent\";\r\nimport TestData from \"../../MapComponent/TestData.json\";\r\n\r\nconst baseURL =\r\n  \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_hour.geojson\";\r\n\r\nconst Home = () => {\r\n  const [post, setPost] = useState(null);\r\n  const [value, setValue] = useState(\"all\");\r\n  const [timeFrame, setTimeFrame] = useState(\"hour\");\r\n\r\n  function handleChangeMagnitude(event) {\r\n    setValue(event.target.value);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    axios.get(baseURL).then((response) => {\r\n      setPost(response.data);\r\n    });\r\n  }, [value, timeFrame]);\r\n\r\n  if (!post) return null;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"buttons\">\r\n        <button className=\"button button1\" onClick={() => setTimeFrame(\"hour\")}>\r\n          Hour\r\n        </button>\r\n        <button className=\"button button2\" onClick={() => setTimeFrame(\"day\")}>\r\n          Day\r\n        </button>\r\n        <button className=\"button button3\" onClick={() => setTimeFrame(\"week\")}>\r\n          Week\r\n        </button>\r\n        <button\r\n          className=\"button button4\"\r\n          onClick={() => setTimeFrame(\"month\")}\r\n        >\r\n          Month\r\n        </button>\r\n      </div>\r\n      <MapComponent earthquakes={TestData} height={450} width={700} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n{\r\n  /*const [data, setData] = useState([]);\r\n  const [value, setValue] = useState(\"Any\");\r\n  const [isShown, setIsShown] = useState(false);\r\n\r\n  function handleChangeMagnitude(event) {\r\n    setValue(event.target.value);\r\n  }\r\n\r\n  async function fetchData() {\r\n    setIsShown(false);\r\n\r\n    if (value === \"Any\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_hour.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    } else if (value === \"4.5+\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/4.5_hour.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    } else if (value === \"2.5+\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_hour.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    } else if (value === \"1+\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/1.0_hour.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [value]);\r\n\r\n  const fetchData2 = async () => {\r\n    setIsShown(false);\r\n\r\n    if (value === \"Any\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_day.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    } else if (value === \"4.5+\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/4.5_day.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    } else if (value === \"2.5+\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_day.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    } else if (value === \"1+\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/1.0_day.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchData2();\r\n  }, [value]);\r\n\r\n  const fetchData3 = async () => {\r\n    setIsShown(false);\r\n\r\n    if (value === \"Any\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_week.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    } else if (value === \"4.5+\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/4.5_week.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    } else if (value === \"2.5+\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_week.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    } else if (value === \"1+\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/1.0_week.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchData3();\r\n  }, [value]);\r\n\r\n  const fetchData4 = async () => {\r\n    setIsShown(false);\r\n\r\n    if (value === \"Any\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_month.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    } else if (value === \"4.5+\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/4.5_month.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    } else if (value === \"2.5+\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_month.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    } else if (value === \"1+\") {\r\n      const response = await fetch(\r\n        \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/1.0_month.geojson\"\r\n      );\r\n      const result = await response.json();\r\n      setData(result.features);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchData4();\r\n  }, [value]);\r\n\r\n  const handleClick = (event) => {\r\n    setIsShown(true);\r\n  };\r\n<div>\r\n        <button\r\n          className=\"button button1\"\r\n          onClick={() => {\r\n            fetchData();\r\n            handleClick();\r\n          }}\r\n        >\r\n          Past Hour\r\n        </button>\r\n        <button\r\n          className=\"button button2\"\r\n          onClick={() => {\r\n            fetchData2();\r\n            handleClick();\r\n          }}\r\n        >\r\n          Past Day\r\n        </button>\r\n        <button\r\n          className=\"button button3\"\r\n          onClick={() => {\r\n            fetchData3();\r\n            handleClick();\r\n          }}\r\n        >\r\n          Past 7 Days\r\n        </button>\r\n        <button\r\n          className=\"button button4\"\r\n          onClick={() => {\r\n            fetchData4();\r\n            handleClick();\r\n          }}\r\n        >\r\n          Past 30 Days\r\n        </button>\r\n        </div>*/\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;;;AAEA,MAAMC,OAAO,GACX,4EADF;;AAGA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;EACA,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,MAAD,CAA1C;;EAEA,SAASY,qBAAT,CAA+BC,KAA/B,EAAsC;IACpCJ,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaN,KAAd,CAAR;EACD;;EAEDV,KAAK,CAACC,SAAN,CAAgB,MAAM;IACpBE,KAAK,CAACc,GAAN,CAAUX,OAAV,EAAmBY,IAAnB,CAAyBC,QAAD,IAAc;MACpCV,OAAO,CAACU,QAAQ,CAACC,IAAV,CAAP;IACD,CAFD;EAGD,CAJD,EAIG,CAACV,KAAD,EAAQE,SAAR,CAJH;EAMA,IAAI,CAACJ,IAAL,EAAW,OAAO,IAAP;EAEX,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,SAAf;MAAA,wBACE;QAAQ,SAAS,EAAC,gBAAlB;QAAmC,OAAO,EAAE,MAAMK,YAAY,CAAC,MAAD,CAA9D;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAIE;QAAQ,SAAS,EAAC,gBAAlB;QAAmC,OAAO,EAAE,MAAMA,YAAY,CAAC,KAAD,CAA9D;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,eAOE;QAAQ,SAAS,EAAC,gBAAlB;QAAmC,OAAO,EAAE,MAAMA,YAAY,CAAC,MAAD,CAA9D;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPF,eAUE;QACE,SAAS,EAAC,gBADZ;QAEE,OAAO,EAAE,MAAMA,YAAY,CAAC,OAAD,CAF7B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAkBE,QAAC,YAAD;MAAc,WAAW,EAAER,QAA3B;MAAqC,MAAM,EAAE,GAA7C;MAAkD,KAAK,EAAE;IAAzD;MAAA;MAAA;MAAA;IAAA,QAlBF;EAAA,gBADF;AAsBD,CAvCD;;GAAME,I;;KAAAA,I;AAyCN,eAAeA,IAAf},"metadata":{},"sourceType":"module"}